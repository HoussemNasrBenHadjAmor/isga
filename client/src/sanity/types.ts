/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type AskQuestion = {
  _id: string;
  _type: "askQuestion";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  title?: string;
};

export type Contact = {
  _id: string;
  _type: "contact";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  card?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
  title_section?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
};

export type Carrers = {
  _id: string;
  _type: "carrers";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
};

export type TelecommunicationsIndustries = {
  _id: string;
  _type: "telecommunicationsIndustries";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  title_section?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
  card?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type FinancialIndustries = {
  _id: string;
  _type: "financialIndustries";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  title_section?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
  card?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type InsuranceIndustries = {
  _id: string;
  _type: "insuranceIndustries";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  title_section?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
  card?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type GovernmentIndustries = {
  _id: string;
  _type: "governmentIndustries";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  title_section?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
  card?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type CyberServices = {
  _id: string;
  _type: "cyberServices";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  title_section?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
  card?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type ArtificialServices = {
  _id: string;
  _type: "artificialServices";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  title_section?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
  card?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type ProjectServices = {
  _id: string;
  _type: "projectServices";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  title_section?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
  card?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type ManagedServices = {
  _id: string;
  _type: "managedServices";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  title_section?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
  card?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type TechnologiesServices = {
  _id: string;
  _type: "technologiesServices";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  title_section?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
  card?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type ApplicationServices = {
  _id: string;
  _type: "applicationServices";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  title_section?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
  card_primary?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
  card_secondary?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type ConsultingServices = {
  _id: string;
  _type: "consultingServices";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  title_section_primary?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
  card_primary?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
  title_section_secondary?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "simple";
  }>;
  card?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type About = {
  _id: string;
  _type: "about";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  content?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "simple";
  };
  card_primary?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
  card_secondary?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type Home = {
  _id: string;
  _type: "home";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  content?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "simple";
  };
  card_primary?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
  home_isga?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "chooseISGA";
  };
  card_secondary?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type ChooseISGA = {
  _id: string;
  _type: "chooseISGA";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  title?: string;
  description?: Array<string>;
  cards?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
};

export type Simple = {
  _id: string;
  _type: "simple";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: Array<string>;
  subtitle?: Array<string>;
  description?: Array<string>;
};

export type Card = {
  _id: string;
  _type: "card";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  svg_path?: string;
  subtitle?: Array<string>;
  description?: Array<string>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type Landing = {
  _id: string;
  _type: "landing";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  title?: Array<string>;
  subtitle?: Array<string>;
  description?: Array<string>;
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "landingCategories";
  }>;
  author?: string;
};

export type LandingCategories = {
  _id: string;
  _type: "landingCategories";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
  listItem?: "bullet";
  markDefs?: Array<{
    href?: string;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  _type: "image";
  _key: string;
}>;

export type Category = {
  _id: string;
  _type: "category";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
};

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  mainImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  publishedAt?: string;
  body?: BlockContent;
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  bio?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | AskQuestion | Contact | Carrers | TelecommunicationsIndustries | FinancialIndustries | InsuranceIndustries | GovernmentIndustries | CyberServices | ArtificialServices | ProjectServices | ManagedServices | TechnologiesServices | ApplicationServices | ConsultingServices | About | Home | ChooseISGA | Simple | Card | Landing | LandingCategories | BlockContent | Category | Post | Author | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | Slug;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ../client/src/sanity/lib/pages/about.ts
// Variable: query
// Query: *[_type == 'about'][0]
export type QueryResult = {
  _id: string;
  _type: "about";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  landing?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "landing";
  };
  content?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "simple";
  };
  card_primary?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
  card_secondary?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "card";
  }>;
} | null;

// Source: ../client/src/sanity/lib/pages/queries.ts
// Variable: homeQuery
// Query: *[_type == 'home'] {          landing -> {            _id,            title[],            subtitle[],            description[],            image {              asset -> { url }            },            author,          },                    content -> {            _id,            title[],            subtitle[],            description[]          },          card_primary [] -> {              _id,              title,              subtitle,              description,              image {                asset -> { url }               },              svg_path,          },          card_secondary [] -> {              _id,              title,              subtitle,              description,              image {                asset -> { url }               },              svg_path,          },          home_isga -> {            _id,            image {              asset -> { url }             },            title,            description,            cards []-> {              _id,              title,              subtitle,              description,              image {                asset -> { url }               },              svg_path,            }           }        }
export type HomeQueryResult = Array<{
  landing: {
    _id: string;
    title: Array<string> | null;
    subtitle: Array<string> | null;
    description: Array<string> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    author: string | null;
  } | null;
  content: {
    _id: string;
    title: Array<string> | null;
    subtitle: Array<string> | null;
    description: Array<string> | null;
  } | null;
  card_primary: Array<{
    _id: string;
    title: string | null;
    subtitle: Array<string> | null;
    description: Array<string> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    svg_path: string | null;
  }> | null;
  card_secondary: Array<{
    _id: string;
    title: string | null;
    subtitle: Array<string> | null;
    description: Array<string> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    svg_path: string | null;
  }> | null;
  home_isga: {
    _id: string;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    title: string | null;
    description: Array<string> | null;
    cards: Array<{
      _id: string;
      title: string | null;
      subtitle: Array<string> | null;
      description: Array<string> | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      svg_path: string | null;
    }> | null;
  } | null;
}>;
// Variable: aboutQuery
// Query: *[_type == 'about'] {           landing -> {            _id,            title[],            subtitle[],            description[],            image {              asset -> { url }            },            author,          },                        content -> {              _id,              title[],              subtitle[],              description[]            },              card_primary []-> {              _id,              title,              subtitle,              description,              image {                asset -> { url }               },              svg_path,            },              card_secondary []-> {              _id,              title,              subtitle,              description,              image {                asset -> { url }               },              svg_path,            }          }
export type AboutQueryResult = Array<{
  landing: {
    _id: string;
    title: Array<string> | null;
    subtitle: Array<string> | null;
    description: Array<string> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    author: string | null;
  } | null;
  content: {
    _id: string;
    title: Array<string> | null;
    subtitle: Array<string> | null;
    description: Array<string> | null;
  } | null;
  card_primary: Array<{
    _id: string;
    title: string | null;
    subtitle: Array<string> | null;
    description: Array<string> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    svg_path: string | null;
  }> | null;
  card_secondary: Array<{
    _id: string;
    title: string | null;
    subtitle: Array<string> | null;
    description: Array<string> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    svg_path: string | null;
  }> | null;
}>;
// Variable: consultingQuery
// Query: *[_type == 'consultingServices'] {              landingServices -> {                _id,                landingTitle,                landingSubtitle,                landingDescription,                landingImage {                  asset -> { url }                }              },                            titleSectionSecondary[]-> {                _id,                title[],                subtitle[],                description[],              },                titleSectionSecondary[]-> {                _id,                title[],                subtitle[],                description[],              },                  cardConsultingServicesPrimary[]-> {                _id,                title,                subtitle,                description,                landingImage {                  asset -> { url }                 },              },              cardConsultingServicesSecondary[]-> {                _id,                title,                subtitle,                description,                landingImage {                  asset -> { url }                 },              },            }
export type ConsultingQueryResult = Array<{
  landingServices: null;
  titleSectionSecondary: null;
  cardConsultingServicesPrimary: null;
  cardConsultingServicesSecondary: null;
}>;
// Variable: technologiesQuery
// Query: *[_type == 'technologiesServices'] {                landing -> {                _id,                title[],                subtitle[],                description[],                image {                  asset -> { url }                },                author,                },                                titleSection[]-> {                  _id,                  title[],                  subtitle[],                  description[],                },                      cardTechnologiesServices[]-> {                  _id,                  title,                  subtitle,                  description,                  landingImage {                    asset -> { url }                   },                },              }
export type TechnologiesQueryResult = Array<{
  landing: {
    _id: string;
    title: Array<string> | null;
    subtitle: Array<string> | null;
    description: Array<string> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    author: string | null;
  } | null;
  titleSection: null;
  cardTechnologiesServices: null;
}>;
// Variable: applicationQuery
// Query: *[_type == 'applicationServices'] {                landing -> {                _id,                title[],                subtitle[],                description[],                image {                  asset -> { url }                },                author,              },                                titleSection[]-> {                  _id,                  title[],                  subtitle[],                  description[],                },                      cardApplicationServicesPrimary[]-> {                  _id,                  title,                  subtitle,                  description,                  landingImage {                    asset -> { url }                   },                },                  cardApplicationServicesSecondary[]-> {                  _id,                  title,                  subtitle,                  description,                  landingImage {                    asset -> { url }                   },                },              }
export type ApplicationQueryResult = Array<{
  landing: {
    _id: string;
    title: Array<string> | null;
    subtitle: Array<string> | null;
    description: Array<string> | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    author: string | null;
  } | null;
  titleSection: null;
  cardApplicationServicesPrimary: null;
  cardApplicationServicesSecondary: null;
}>;
// Variable: managedQuery
// Query: *[_type == 'managedServices'][0] {                  landingServices -> {                    _id,                    landingTitle,                    landingSubtitle,                    landingDescription,                    landingImage {                      asset -> { url }                    }                  },                                    titleSection[]-> {                    _id,                    title[],                    subtitle[],                    description[],                  },                          cardManagedServices[]-> {                    _id,                    title,                    subtitle,                    description,                    landingImage {                      asset -> { url }                     },                  },                }
export type ManagedQueryResult = {
  landingServices: null;
  titleSection: null;
  cardManagedServices: null;
} | null;
// Variable: projectQuery
// Query: *[_type == 'projectServices'][0] {                    landingServices -> {                      _id,                      landingTitle,                      landingSubtitle,                      landingDescription,                      landingImage {                        asset -> { url }                      }                    },                                        titleSection[]-> {                      _id,                      title[],                      subtitle[],                      description[],                    },                              cardProjectServices[]-> {                      _id,                      title,                      subtitle,                      description,                      landingImage {                        asset -> { url }                       },                    },                  }
export type ProjectQueryResult = {
  landingServices: null;
  titleSection: null;
  cardProjectServices: null;
} | null;
// Variable: artificialQuery
// Query: *[_type == 'artificialServices'][0] {                      landingServices -> {                        _id,                        landingTitle,                        landingSubtitle,                        landingDescription,                        landingImage {                          asset -> { url }                        }                      },                                            titleSection[]-> {                        _id,                        title[],                        subtitle[],                        description[],                      },                                  cardArtificalServices[]-> {                        _id,                        title,                        subtitle,                        description,                        landingImage {                          asset -> { url }                         },                      },                    }
export type ArtificialQueryResult = {
  landingServices: null;
  titleSection: null;
  cardArtificalServices: null;
} | null;
// Variable: cyberQuery
// Query: *[_type == 'cyberServices'][0] {        landingServices -> {            _id,            landingTitle,            landingSubtitle,            landingDescription,            landingImage {                asset -> { url }            }        },                                titleSection[]-> {            _id,            title[],            subtitle[],            description[],        },                      cardCyberServices[]-> {            _id,            title,            subtitle,            description,            landingImage {                asset -> { url }             },        },    }
export type CyberQueryResult = {
  landingServices: null;
  titleSection: null;
  cardCyberServices: null;
} | null;
// Variable: governmentQuery
// Query: *[_type == 'governmentIndustries'][0] {        landingIndustries -> {            _id,            landingTitle,            landingSubtitle,            landingDescription,            landingImage {                asset -> { url }            }        },                                titleSection[]-> {            _id,            title[],            subtitle[],            description[],        },                      cardGovernmentIndustries[]-> {            _id,            title,            subtitle,            description,            landingImage {                asset -> { url }             },        },    }
export type GovernmentQueryResult = {
  landingIndustries: null;
  titleSection: null;
  cardGovernmentIndustries: null;
} | null;
// Variable: insuranceQuery
// Query: *[_type == 'insuranceIndustries'][0] {        landingIndustries -> {            _id,            landingTitle,            landingSubtitle,            landingDescription,            landingImage {                asset -> { url }            }        },                                titleSection[]-> {            _id,            title[],            subtitle[],            description[],        },                      cardInsuranceIndustries[]-> {            _id,            title,            subtitle,            description,            landingImage {                asset -> { url }             },        },    }
export type InsuranceQueryResult = {
  landingIndustries: null;
  titleSection: null;
  cardInsuranceIndustries: null;
} | null;
// Variable: financialQuery
// Query: *[_type == 'financialIndustries'][0] {        landingIndustries -> {            _id,            landingTitle,            landingSubtitle,            landingDescription,            landingImage {                asset -> { url }            }        },                                titleSection[]-> {            _id,            title[],            subtitle[],            description[],        },                      cardFinancialIndustries[]-> {            _id,            title,            subtitle,            description,            landingImage {                asset -> { url }             },        },    }
export type FinancialQueryResult = {
  landingIndustries: null;
  titleSection: null;
  cardFinancialIndustries: null;
} | null;
// Variable: telecommunicationQuery
// Query: *[_type == 'telecommunicationsIndustries'][0] {        landingIndustries -> {            _id,            landingTitle,            landingSubtitle,            landingDescription,            landingImage {                asset -> { url }            }        },                                titleSection[]-> {            _id,            title[],            subtitle[],            description[],        },                      cardTelecommunicationsIndustries[]-> {            _id,            title,            subtitle,            description,            landingImage {                asset -> { url }             },        },    }
export type TelecommunicationQueryResult = {
  landingIndustries: null;
  titleSection: null;
  cardTelecommunicationsIndustries: null;
} | null;
// Variable: carrersQuery
// Query: *[_type == 'carrers'][0] {        landingCarrers -> {            _id,            landingTitle,            landingSubtitle,            landingDescription,            landingImage {                asset -> { url }            }        },    }
export type CarrersQueryResult = {
  landingCarrers: null;
} | null;
// Variable: contactQuery
// Query: *[_type == 'contact'][0] {        landingContact -> {            _id,            landingTitle,            landingSubtitle,            landingDescription,            landingImage {                asset -> { url }            }        },                                titleSection[]-> {            _id,            title[],            subtitle[],            description[],        },                      cardContact[]-> {            _id,            title,            subtitle,            description,            landingImage {                asset -> { url }             },        },    }
export type ContactQueryResult = {
  landingContact: null;
  titleSection: null;
  cardContact: null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "\n       *[_type == 'about'][0]\n        ": QueryResult;
    "\n  *[_type == 'home'] {\n          landing -> {\n            _id,\n            title[],\n            subtitle[],\n            description[],\n            image {\n              asset -> { url }\n            },\n            author,\n          },\n          \n          content -> {\n            _id,\n            title[],\n            subtitle[],\n            description[]\n          },\n\n          card_primary [] -> {\n              _id,\n              title,\n              subtitle,\n              description,\n              image {\n                asset -> { url } \n              },\n              svg_path,\n          },\n\n          card_secondary [] -> {\n              _id,\n              title,\n              subtitle,\n              description,\n              image {\n                asset -> { url } \n              },\n              svg_path,\n          },\n\n          home_isga -> {\n            _id,\n            image {\n              asset -> { url } \n            },\n            title,\n            description,\n            cards []-> {\n              _id,\n              title,\n              subtitle,\n              description,\n              image {\n                asset -> { url } \n              },\n              svg_path,\n            } \n          }\n        }   \n     ": HomeQueryResult;
    "\n        *[_type == 'about'] {\n           landing -> {\n            _id,\n            title[],\n            subtitle[],\n            description[],\n            image {\n              asset -> { url }\n            },\n            author,\n          },\n            \n            content -> {\n              _id,\n              title[],\n              subtitle[],\n              description[]\n            },\n  \n            card_primary []-> {\n              _id,\n              title,\n              subtitle,\n              description,\n              image {\n                asset -> { url } \n              },\n              svg_path,\n            },\n  \n            card_secondary []-> {\n              _id,\n              title,\n              subtitle,\n              description,\n              image {\n                asset -> { url } \n              },\n              svg_path,\n            }\n          }   \n       ": AboutQueryResult;
    "\n    *[_type == 'consultingServices'] {\n              landingServices -> {\n                _id,\n                landingTitle,\n                landingSubtitle,\n                landingDescription,\n                landingImage {\n                  asset -> { url }\n                }\n              },\n              \n              titleSectionSecondary[]-> {\n                _id,\n                title[],\n                subtitle[],\n                description[],\n              },\n  \n              titleSectionSecondary[]-> {\n                _id,\n                title[],\n                subtitle[],\n                description[],\n              },\n    \n              cardConsultingServicesPrimary[]-> {\n                _id,\n                title,\n                subtitle,\n                description,\n                landingImage {\n                  asset -> { url } \n                },\n              },\n\n              cardConsultingServicesSecondary[]-> {\n                _id,\n                title,\n                subtitle,\n                description,\n                landingImage {\n                  asset -> { url } \n                },\n              },\n            }   \n         ": ConsultingQueryResult;
    "\n      *[_type == 'technologiesServices'] {\n                landing -> {\n                _id,\n                title[],\n                subtitle[],\n                description[],\n                image {\n                  asset -> { url }\n                },\n                author,\n                },\n                \n                titleSection[]-> {\n                  _id,\n                  title[],\n                  subtitle[],\n                  description[],\n                },\n      \n                cardTechnologiesServices[]-> {\n                  _id,\n                  title,\n                  subtitle,\n                  description,\n                  landingImage {\n                    asset -> { url } \n                  },\n                },\n              }   \n           ": TechnologiesQueryResult;
    "\n      *[_type == 'applicationServices'] {\n                landing -> {\n                _id,\n                title[],\n                subtitle[],\n                description[],\n                image {\n                  asset -> { url }\n                },\n                author,\n              },\n                \n                titleSection[]-> {\n                  _id,\n                  title[],\n                  subtitle[],\n                  description[],\n                },\n      \n                cardApplicationServicesPrimary[]-> {\n                  _id,\n                  title,\n                  subtitle,\n                  description,\n                  landingImage {\n                    asset -> { url } \n                  },\n                },\n  \n                cardApplicationServicesSecondary[]-> {\n                  _id,\n                  title,\n                  subtitle,\n                  description,\n                  landingImage {\n                    asset -> { url } \n                  },\n                },\n              }   \n           ": ApplicationQueryResult;
    "\n        *[_type == 'managedServices'][0] {\n                  landingServices -> {\n                    _id,\n                    landingTitle,\n                    landingSubtitle,\n                    landingDescription,\n                    landingImage {\n                      asset -> { url }\n                    }\n                  },\n                  \n                  titleSection[]-> {\n                    _id,\n                    title[],\n                    subtitle[],\n                    description[],\n                  },\n        \n                  cardManagedServices[]-> {\n                    _id,\n                    title,\n                    subtitle,\n                    description,\n                    landingImage {\n                      asset -> { url } \n                    },\n                  },\n                }   \n             ": ManagedQueryResult;
    "\n          *[_type == 'projectServices'][0] {\n                    landingServices -> {\n                      _id,\n                      landingTitle,\n                      landingSubtitle,\n                      landingDescription,\n                      landingImage {\n                        asset -> { url }\n                      }\n                    },\n                    \n                    titleSection[]-> {\n                      _id,\n                      title[],\n                      subtitle[],\n                      description[],\n                    },\n          \n                    cardProjectServices[]-> {\n                      _id,\n                      title,\n                      subtitle,\n                      description,\n                      landingImage {\n                        asset -> { url } \n                      },\n                    },\n                  }   \n               ": ProjectQueryResult;
    "\n            *[_type == 'artificialServices'][0] {\n                      landingServices -> {\n                        _id,\n                        landingTitle,\n                        landingSubtitle,\n                        landingDescription,\n                        landingImage {\n                          asset -> { url }\n                        }\n                      },\n                      \n                      titleSection[]-> {\n                        _id,\n                        title[],\n                        subtitle[],\n                        description[],\n                      },\n            \n                      cardArtificalServices[]-> {\n                        _id,\n                        title,\n                        subtitle,\n                        description,\n                        landingImage {\n                          asset -> { url } \n                        },\n                      },\n                    }   \n                 ": ArtificialQueryResult;
    "\n    *[_type == 'cyberServices'][0] {\n        landingServices -> {\n            _id,\n            landingTitle,\n            landingSubtitle,\n            landingDescription,\n            landingImage {\n                asset -> { url }\n            }\n        },\n                        \n        titleSection[]-> {\n            _id,\n            title[],\n            subtitle[],\n            description[],\n        },\n              \n        cardCyberServices[]-> {\n            _id,\n            title,\n            subtitle,\n            description,\n            landingImage {\n                asset -> { url } \n            },\n        },\n    }   \n    ": CyberQueryResult;
    "\n    *[_type == 'governmentIndustries'][0] {\n        landingIndustries -> {\n            _id,\n            landingTitle,\n            landingSubtitle,\n            landingDescription,\n            landingImage {\n                asset -> { url }\n            }\n        },\n                        \n        titleSection[]-> {\n            _id,\n            title[],\n            subtitle[],\n            description[],\n        },\n              \n        cardGovernmentIndustries[]-> {\n            _id,\n            title,\n            subtitle,\n            description,\n            landingImage {\n                asset -> { url } \n            },\n        },\n    }   \n    ": GovernmentQueryResult;
    "\n    *[_type == 'insuranceIndustries'][0] {\n        landingIndustries -> {\n            _id,\n            landingTitle,\n            landingSubtitle,\n            landingDescription,\n            landingImage {\n                asset -> { url }\n            }\n        },\n                        \n        titleSection[]-> {\n            _id,\n            title[],\n            subtitle[],\n            description[],\n        },\n              \n        cardInsuranceIndustries[]-> {\n            _id,\n            title,\n            subtitle,\n            description,\n            landingImage {\n                asset -> { url } \n            },\n        },\n    }   \n    ": InsuranceQueryResult;
    "\n    *[_type == 'financialIndustries'][0] {\n        landingIndustries -> {\n            _id,\n            landingTitle,\n            landingSubtitle,\n            landingDescription,\n            landingImage {\n                asset -> { url }\n            }\n        },\n                        \n        titleSection[]-> {\n            _id,\n            title[],\n            subtitle[],\n            description[],\n        },\n              \n        cardFinancialIndustries[]-> {\n            _id,\n            title,\n            subtitle,\n            description,\n            landingImage {\n                asset -> { url } \n            },\n        },\n    }   \n    ": FinancialQueryResult;
    "\n    *[_type == 'telecommunicationsIndustries'][0] {\n        landingIndustries -> {\n            _id,\n            landingTitle,\n            landingSubtitle,\n            landingDescription,\n            landingImage {\n                asset -> { url }\n            }\n        },\n                        \n        titleSection[]-> {\n            _id,\n            title[],\n            subtitle[],\n            description[],\n        },\n              \n        cardTelecommunicationsIndustries[]-> {\n            _id,\n            title,\n            subtitle,\n            description,\n            landingImage {\n                asset -> { url } \n            },\n        },\n    }   \n    ": TelecommunicationQueryResult;
    "\n    *[_type == 'carrers'][0] {\n        landingCarrers -> {\n            _id,\n            landingTitle,\n            landingSubtitle,\n            landingDescription,\n            landingImage {\n                asset -> { url }\n            }\n        },\n    }   \n    ": CarrersQueryResult;
    "\n    *[_type == 'contact'][0] {\n        landingContact -> {\n            _id,\n            landingTitle,\n            landingSubtitle,\n            landingDescription,\n            landingImage {\n                asset -> { url }\n            }\n        },\n                        \n        titleSection[]-> {\n            _id,\n            title[],\n            subtitle[],\n            description[],\n        },\n              \n        cardContact[]-> {\n            _id,\n            title,\n            subtitle,\n            description,\n            landingImage {\n                asset -> { url } \n            },\n        },\n    }   \n    ": ContactQueryResult;
  }
}
